{"version":3,"sources":["components/Calendar/CalendarEvent.jsx","components/Calendar/Day.jsx","components/Calendar/EventPopup.jsx","components/FileUploader/FileUploader.jsx","components/GoogleIntegration/GoogleIntegration.jsx","components/Calendar/Calendar.jsx","components/EventsManager.js","components/DaySummary/DaySummary.jsx","components/SubwayStatus/SubwayStatus.jsx","components/Application/Application.jsx","App.js","reportWebVitals.js","index.js"],"names":["CalendarEvent","renderTimeIfNeeded","props","event","allDay","showFromTime","from","time","hour","prependZeroIfNeeded","minute","showToTime","to","Fragment","value","string","String","length","className","onClick","showPopup","this","title","Component","Day","days","day","events","map","ev","needShowFromTime","needShowToTime","id","EventPopup","state","modifyMode","description","location","year","month","recurrence","fromTime","toTime","setModifyMode","bind","sendToUpdate","sendToDelete","sendToAdd","sentToAdd","boolean","setState","hidePopup","dateFromSplit","split","dateToSplit","fromTimeSplit","toTimeSplit","eventsManager","updateEvent","then","refreshEvents","deleteEvent","addEvent","addingEventMode","type","onSubmit","e","preventDefault","checked","onChange","required","pattern","target","max","min","FileUploader","file","isLoaded","uploadMessage","icalUrl","fileUploadHandler","fetchIcalFromUrl","console","log","reader","FileReader","onload","sendIcal","encodeURIComponent","result","readAsText","url","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","catch","err","f","align","name","files","GoogleIntegration","importFromGoogleCalendar","Calendar","monthToString","renderCalendar","tab","Array","daysInMonth","keys","retTab","accTab","placeholderNumber","Date","getDay","arePlaceholdersPushed","push","index","dayEvents","forEach","showEventPopup","i","date","getMonth","getFullYear","isPopup","popupEvent","addMonth","subMonth","addYear","subYear","hideEventPopup","fetchEvents","refreshEventsAllApp","getDate","createBlankEvent","EventsManager","fetchInBackend","fromYear","fromMonth","fromDay","toYear","toMonth","toDay","fromHour","fromMinute","toHour","toMinute","JSON","stringify","response","json","user","jsonStr","parse","fetchMethod","DaySummary","renderEventsList","dayEventTab","sort","ev1","ev2","SubwayStatus","statuses","fetchMetroStatus","jsonString","temp","renderMetroStatus","statusJson","renderFinal","metrosTab","metros","m","line","rers","tramways","pushTab","Application","calendarEvents","daySummaryEvents","fetchCalendarEvents","fetchDaySummaryEvents","getEvents","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e57cb07d.chunk.js","sourcesContent":["import React, {Component} from \"react\";\nimport \"./CalendarEvent.css\";\n\nclass CalendarEvent extends Component{\n\n    prependZeroIfNeeded(value){\n        var string = String(value)\n        if(string.length === 1) string = \"0\" +string;\n        return string;\n    }\n\n    renderTimeIfNeeded = () =>{\n        if(this.props.event.allDay === false){\n            if(this.props.showFromTime){\n                return this.props.event.from.time.hour +\":\" +this.prependZeroIfNeeded(this.props.event.from.time.minute) +\" \";\n            }\n            else if(this.props.showToTime){\n                return this.props.event.to.time.hour +\":\" +this.prependZeroIfNeeded(this.props.event.to.time.minute) +\" \";\n            }\n        }\n        return <React.Fragment></React.Fragment>\n    }\n\n    \n\n    render(){\n        return(\n            <React.Fragment>\n                <p className=\"event-title\" onClick={() => this.props.showPopup(this.props.event)}>\n                    {this.renderTimeIfNeeded()}\n                    {this.props.event.title}\n                </p>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default CalendarEvent;","import React, {Component} from \"react\";\nimport \"./Day.css\";\nimport CalendarEvent from \"./CalendarEvent.jsx\";\n\nclass Day extends Component{\n\n    days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n\n    needShowFromTime(event){\n        return event.from.day === this.props.day\n    }\n\n    needShowToTime(event){\n        return event.to.day === this.props.day\n    }\n\n    render(){\n        return(\n            <td className=\"calendar-day\">\n                <p className=\"day-num\">{this.props.day}</p>\n                {/* <p className=\"dayName\">{this.days[new Date(2021, 10, 4).getDay()]}</p> */}\n                <br></br>\n                {this.props.events.map(ev => \n                    <React.Fragment key={ev.id}>\n                        <CalendarEvent key={ev.id} event={ev} showPopup={this.props.showPopup} showFromTime={this.needShowFromTime(ev)} showToTime={this.needShowToTime(ev)}></CalendarEvent>\n                    </React.Fragment>)}\n            </td>\n        );\n    }\n}\n\nexport default Day;","import React, {Component} from \"react\";\nimport \"./EventPopup.css\";\n\nclass EventPopup extends Component{\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            modifyMode: false,\n            title: this.props.event.title,\n            description: this.props.event.description,\n            location: this.props.event.location,\n            from: this.props.event.from.year +\"-\" +this.prependZeroIfNeeded(this.props.event.from.month) +\"-\" +this.prependZeroIfNeeded(this.props.event.from.day),\n            to: this.props.event.to.year +\"-\" +this.prependZeroIfNeeded(this.props.event.to.month) +\"-\" +this.prependZeroIfNeeded(this.props.event.to.day),\n            recurrence: this.props.event.recurrence,\n            fromTime: this.prependZeroIfNeeded(this.props.event.from.time.hour) +\":\" +this.prependZeroIfNeeded(this.props.event.from.time.minute),\n            toTime: this.prependZeroIfNeeded(this.props.event.to.time.hour) +\":\" +this.prependZeroIfNeeded(this.props.event.to.time.minute),\n\n            //Need to {} between boolean value for the browser\n            allDay: !!this.props.event.allDay\n        }\n        \n        this.setModifyMode = this.setModifyMode.bind(this);\n        this.sendToUpdate = this.sendToUpdate.bind(this);\n        this.sendToDelete = this.sendToDelete.bind(this);\n        this.sendToAdd = this.sentToAdd.bind(this);\n    }\n\n    prependZeroIfNeeded(value){\n        var string = String(value)\n        if(string.length === 1) string = \"0\" +string;\n        return string;\n    }\n\n\n\n    setModifyMode(boolean){\n        this.setState({modifyMode: boolean});\n    }\n\n    sendToUpdate(){\n        this.props.hidePopup();\n        this.setModifyMode(false);\n\n        let dateFromSplit = this.state.from.split(\"-\");\n        let dateToSplit = this.state.to.split(\"-\");\n\n        let fromTimeSplit = this.state.fromTime.split(\":\");\n        let toTimeSplit = this.state.toTime.split(\":\");\n\n        var promise = this.props.eventsManager.updateEvent(this.props.event.id, \n                                            dateFromSplit[0], dateFromSplit[1], dateFromSplit[2],\n                                            dateToSplit[0], dateToSplit[1], dateToSplit[2],\n                                            fromTimeSplit[0], fromTimeSplit[1], toTimeSplit[0], toTimeSplit[1],\n                                            this.state.title, this.state.location, this.state.description, this.state.recurrence, this.state.allDay);\n\n        promise.then(() => {this.props.refreshEvents()});\n    }\n\n    sendToDelete(event){\n        this.props.hidePopup();\n        var promise = this.props.eventsManager.deleteEvent(event);\n\n        promise.then(() => {this.props.refreshEvents()});\n    }\n\n    sentToAdd(){\n        this.props.hidePopup();\n        let dateFromSplit = this.state.from.split(\"-\");\n        let dateToSplit = this.state.to.split(\"-\");\n\n        let fromTimeSplit = this.state.fromTime.split(\":\");\n        let toTimeSplit = this.state.toTime.split(\":\");\n\n        var promise = this.props.eventsManager.addEvent( dateFromSplit[0], dateFromSplit[1], dateFromSplit[2],\n                                            dateToSplit[0], dateToSplit[1], dateToSplit[2],\n                                            fromTimeSplit[0], fromTimeSplit[1], toTimeSplit[0], toTimeSplit[1],\n                                            this.state.title, this.state.location, this.state.description, this.state.recurrence, this.state.allDay);\n        \n        promise.then(() => {this.props.refreshEvents()});\n    }\n\n    render(){\n        return(\n            <React.Fragment>\n                {this.state.modifyMode === false && this.props.addingEventMode === false\n    \n                ? <div className=\"popup\">\n                    <button type=\"button\" className=\"popup-btn-close\" onClick={this.props.hidePopup}>X</button>\n                    <p><b>{this.props.event.title}</b></p>\n                    <p>{this.props.event.description}</p>\n                    <p>{this.props.event.location}</p>\n                    <p><b>From:</b> {this.props.event.from.day}/{this.props.event.from.month}/{this.props.event.from.year}</p>\n                    <p><b>To:</b> {this.props.event.to.day}/{this.props.event.to.month}/{this.props.event.to.year}</p>\n                    \n                    <button type=\"button\" className=\"popup-btn\" onClick={() => this.setModifyMode(true)}>Modify</button>\n                    <button type=\"button\" className=\"popup-btn\" onClick={() => this.sendToDelete(this.props.event)}>Delete</button>\n                </div>\n    \n                :<div className=\"popup\">\n                    \n                    \n                    \n                    <form onSubmit={e => {e.preventDefault(); if(this.props.addingEventMode) this.sendToAdd(); else this.sendToUpdate();}}>\n                        {this.state.modifyMode ? <b>Modify Event</b> : <b>Add Event</b> }\n                        <button type=\"button\" className=\"popup-btn-close\" onClick={this.props.hidePopup}>X</button>\n                        \n                        <p><b>All day:  </b>\n                            <input className=\"text-input\" type=\"checkbox\" checked={this.state.allDay} onChange={() => this.setState({allDay: !this.state.allDay})} ></input>\n                            \n                        </p>\n\n                        <p><b>Title:  </b>\n                            <input className=\"text-input\" type=\"text\" required=\"required\" title=\"Max 64 characteres\" pattern=\".{0,64}\" value={this.state.title} onChange={e => this.setState({title: e.target.value})}/>\n                        </p>\n\n                        <p><b>Description:  </b>\n                            <input className=\"text-input\" type=\"text\" title=\"Max 128 characteres\" pattern=\".{0,128}\" value={this.state.description} onChange={e => this.setState({description: e.target.value})}/>\n                        </p>\n\n                        <p><b>Location:  </b>\n                            <input className=\"text-input\" type=\"text\" title=\"Max 64 characteres\" pattern=\".{0,64}\" value={this.state.location} onChange={e => this.setState({location: e.target.value})}/>\n                        </p>\n\n                        <p><b>From: </b>\n                            <input className=\"date-input\" type=\"date\" max={this.state.to} value={this.state.from} onChange={e => this.setState({from: e.target.value})}/>\n                        </p>\n\n                        <p><b>To: </b>\n                            <input className=\"date-input\" type=\"date\" min ={this.state.from} value={this.state.to} onChange={e => this.setState({to: e.target.value})}/>\n                        </p>\n\n                        {this.state.allDay\n                            ? <React.Fragment></React.Fragment>\n                            : <React.Fragment>\n\n                                <p><b>From Time: </b>\n                                    <input className=\"text-input\" type=\"time\" max={this.state.toTime} value={this.state.fromTime} onChange={e => this.setState({fromTime: e.target.value})}/>\n                                </p>\n\n                                <p><b>To Time: </b>\n                                    <input className=\"text-input\" type=\"time\" min={this.state.fromTime} value={this.state.toTime} onChange={e => this.setState({toTime: e.target.value})}/>\n                                </p>\n                            </React.Fragment>\n                        }\n\n                        <p><b>Recurrence: </b>\n                            <select value={this.state.recurrence} onChange={e => this.setState({recurrence: e.target.value})}>\n                                <option value={this.state.recurrence}>{this.state.recurrence}</option>\n                                <option value=\"DAILY\">DAILY</option>\n                                <option value=\"MONTHLY\">MONTHLY</option>\n                                <option value=\"YEARLY\">YEARLY</option>\n                                <option value=\"NONE\">NONE</option>\n                            </select>\n                        </p>\n\n                        <input type=\"submit\" className=\"popup-btn\" value=\"Save\"/>\n                    </form> \n                </div>\n                }\n            </React.Fragment>\n        );\n    }\n}\n\nexport default EventPopup;","import React, {Component} from \"react\";\nimport \"./fileUploader.css\";\n\nclass FileUploader extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            file: null,\n            isLoaded: false,\n            uploadMessage: \"\",\n\n            icalUrl:\"\"\n        }\n\n        this.fileUploadHandler = this.fileUploadHandler.bind(this);\n        this.fetchIcalFromUrl = this.fetchIcalFromUrl.bind(this);\n    }\n\n    fileUploadHandler(){\n        console.log(\"Uploaded\");\n        console.log(this.state.file);\n        \n        var reader = new FileReader();\n        \n        reader.onload = (e) => this.sendIcal(\"http://localhost:8080/calendar-events/sendIcal/\" +encodeURIComponent(e.target.result));\n        reader.readAsText(this.state.file);\n        \n    }\n\n    sendIcal(url){\n        var promise = fetch(url , {\n          method: 'GET', // *GET, POST, PUT, DELETE, etc.\n          mode: 'cors', // no-cors, *cors, same-origin\n          cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n          credentials: 'same-origin', // include, *same-origin, omit\n          headers: {\n              'Content-Type': 'application/json'//,\n              //'Authorization': `Bearer ${this.$jwt.getToken()}`\n              // 'Content-Type': 'application/x-www-form-urlencoded',\n          },\n          redirect: 'follow', // manual, *follow, error\n          referrerPolicy: 'no-referrer'\n          })\n          .then(() => this.setState({uploadMessage: \"Envoi reussi\"}))\n          .then(() => this.props.refreshEvents())\n          .catch(err => {\n            this.setState({uploadMessage: \"Erreur d'envoi\"})\n        });\n\n        return promise;\n    }\n\n    fetchIcalFromUrl(){\n        console.log(this.state.icalUrl);\n        fetch(this.state.icalUrl , {\n            method: 'GET', // *GET, POST, PUT, DELETE, etc.\n            mode: 'cors', // no-cors, *cors, same-origin\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n            credentials: 'same-origin', // include, *same-origin, omit\n            headers: {\n                'Content-Type': 'application/json'//,\n                //'Authorization': `Bearer ${this.$jwt.getToken()}`\n                // 'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            redirect: 'follow', // manual, *follow, error\n            referrerPolicy: 'no-referrer'\n            })\n            .then(f => {\n                this.setState({file: f});\n                this.fileUploadHandler();\n            })\n            .catch(err => {\n              this.setState({uploadMessage: \"Erreur d'envoi\"})\n          });\n    }\n\n    render(){\n        return(\n            <div align=\"center\">\n                <br></br>\n                <input type=\"file\" name=\"file\" onChange={e =>{ this.setState({file: e.target.files[0], isLoaded: true, uploadMessage:\"\"}) }}/>\n                <button className=\"btn\" type=\"button\" onClick={this.fileUploadHandler}>Uploader le fichier</button>\n                {this.state.uploadMessage}\n                <br></br>\n                <input type=\"text\" className=\"btn\" value={this.state.icalUrl} onChange={e =>{ this.setState({icalUrl: e.target.value}) }}/>\n                <button className=\"btn\" type=\"button\" onClick={this.fetchIcalFromUrl}>Uploader a partir d'une URL</button>\n\n                {/* <input className=\"text-input\" type=\"time\" min={this.state.fromTime} value={this.state.toTime} onChange={e => this.setState({toTime: e.target.value})}/> */}\n            </div>\n        );\n    }\n}\n\nexport default FileUploader;","import React, {Component} from \"react\";\nimport \"./GoogleIntegration.css\";\n\nclass GoogleIntegration extends Component{\n\n    constructor(props){\n        super(props);\n\n        this.importFromGoogleCalendar = this.importFromGoogleCalendar.bind(this);\n    }\n\n    importFromGoogleCalendar(){\n        fetch(\"http://localhost:8080/calendar-events/connectToGoogleCalendar/\" , {\n            method: 'GET', // *GET, POST, PUT, DELETE, etc.\n            })\n        .then(() => this.props.refreshEvents())\n        .catch(err => console.log(err));\n    }\n\n\n    render(){\n        return(\n            <div>\n                <button className=\"btn\" type=\"button\" onClick={this.importFromGoogleCalendar}> Importer a partir de Google Calendar </button>\n                \n            </div>\n        );\n    }\n}\n\nexport default GoogleIntegration;","import React, {Component} from \"react\";\nimport Day from \"./Day.jsx\";\nimport \"./Calendar.css\";\nimport EventPopup from \"./EventPopup.jsx\";\nimport FileUploader from '../FileUploader/FileUploader.jsx';\nimport GoogleIntegration from '../GoogleIntegration/GoogleIntegration.jsx';\n\nclass Calendar extends Component{\n\n    monthToString = {1:\"Janvier\", 2:\"Fevrier\", 3:\"Mars\", 4:\"Avril\", 5:\"Mai\", 6:\"Juin\", 7:\"Juillet\", 8:\"Aout\", 9:\"Septembre\", 10:\"Octobre\", 11:\"Novembre\", 12:\"Decembre\"}\n\n    constructor(props){\n        super(props);\n        const date = new Date();\n\n        this.state = {\n            month: date.getMonth()+1,\n            year: date.getFullYear(),\n\n            isPopup: false,\n            addingEventMode: false,\n            popupEvent: null\n        }\n        \n        this.addMonth = this.addMonth.bind(this);\n        this.subMonth = this.subMonth.bind(this);\n        this.addYear = this.addYear.bind(this);\n        this.subYear = this.subYear.bind(this);\n\n        this.hideEventPopup = this.hideEventPopup.bind(this);\n        this.showEventPopup = this.showEventPopup.bind(this);\n\n        this.addEvent = this.addEvent.bind(this);\n        this.refreshEvents = this.refreshEvents.bind(this);\n    }\n\n    componentDidMount(){\n        this.fetchEvents(this.state.year, this.state.month)\n    }\n\n    fetchEvents(year, month){\n        this.props.fetchEvents(year,month);\n    }\n\n    refreshEvents(){\n        // console.log(\"Date: \" +this.state.year +\" \" +this.state.month)\n        this.props.refreshEventsAllApp(this.state.year, this.state.month);\n    }\n\n    daysInMonth(month, year) {\n        return new Date(year, month, 0).getDate();\n    }\n\n    showEventPopup(event){\n        this.setState({isPopup: true});\n        this.setState({popupEvent: event});\n    }\n\n    hideEventPopup(){\n        this.setState({isPopup: false});\n        this.setState({addingEventMode: false});\n    }\n\n    addEvent(){\n        this.setState({addingEventMode: true});\n        this.showEventPopup(this.props.eventsManager.createBlankEvent(this.state.year, this.state.month));\n    }\n\n\n    renderCalendar = () => {\n        let tab = Array.from(Array(this.daysInMonth(this.state.month, this.state.year)).keys());\n        let retTab = [];\n        let accTab = [];\n        \n        //0=Sunday 1=Monday 6=Saturday\n        let placeholderNumber = new Date(this.state.year, this.state.month-1, 1).getDay();\n        let arePlaceholdersPushed = false;\n                \n        for (let index = 0; index < tab.length; index++) {\n            if (accTab.length === 7) {\n                //Push a row\n                retTab.push(<tr key={\"Row_\" +index}>{accTab}</tr>);\n                accTab=[];\n            }\n            \n            let dayEvents = [];\n            this.props.events.forEach(event => {\n                if( new Date(event.from.year, event.from.month-1, event.from.day) <= new Date(this.state.year, this.state.month-1, tab[index]+1) &&\n                    new Date(event.to.year, event.to.month-1, event.to.day) >= new Date(this.state.year, this.state.month-1, tab[index]+1)){\n                        dayEvents.push(event);\n                    }\n                });\n            \n            if(!arePlaceholdersPushed){\n                for(let i = 0; i < placeholderNumber; i++){\n                    //Push placeholder\n                    accTab.push(<td key={\"Placeholder_\"+i} className=\"day-placeholder\"></td>);\n                }\n                arePlaceholdersPushed = true;\n                index--;\n            }\n            else{\n                //Push the day\n                accTab.push(<Day key={\"Day_\"+index} day={tab[index]+1} events={dayEvents} showPopup={this.showEventPopup}></Day>);\n            }\n        }\n        //Push remaining row\n        retTab.push(<tr key={\"Remaining_Row\"}>{accTab}</tr>);\n        return retTab;\n    }\n\n      addMonth(){\n          this.hideEventPopup();\n          if(this.state.month === 12){\n              this.setState({month: 1});\n              this.setState({year: this.state.year+1});\n              this.fetchEvents(this.state.year+1, 1)\n            }\n            else{\n                this.setState({month: this.state.month+1});\n                this.fetchEvents(this.state.year, this.state.month+1)\n            }\n      }\n\n      subMonth(){\n        this.hideEventPopup();\n        if(this.state.month === 1){\n            this.setState({month: 12});\n            this.setState({year: this.state.year-1});\n            this.fetchEvents(this.state.year-1, 12)\n        }\n        else{\n            this.setState({month: this.state.month-1});\n            this.fetchEvents(this.state.year, this.state.month-1)\n        }\n      }\n\n      addYear(){\n        this.hideEventPopup();\n        this.setState({year: this.state.year+1});\n        this.fetchEvents(this.state.year+1, this.state.month)\n      }\n\n      subYear(){\n        this.hideEventPopup();\n        this.setState({year: this.state.year-1});\n        this.fetchEvents(this.state.year-1, this.state.month)\n      }\n\n    render(){\n        return (\n            <div align=\"center\">\n                {/* <DaySummary></DaySummary> */}\n                <h4 className=\"calendar-month\">{this.monthToString[this.state.month] +\" \" +this.state.year}</h4>\n                <button className=\"calendar-btn\" onClick={this.subMonth}>{\"<-\"}</button>\n                <button className=\"calendar-btn\" onClick={this.addMonth}>{\"->\"}</button>\n                <button className=\"calendar-btn\" onClick={this.subYear}>{\"<=\"}</button>\n                <button className=\"calendar-btn\" onClick={this.addYear}>{\"=>\"}</button>\n                <button className=\"calendar-btn\" onClick={this.addEvent}>+</button>\n                <table>\n                    <tbody>\n                        <tr>\n                            <td className=\"calendar-dayName\">Dimanche</td>\n                            <td className=\"calendar-dayName\">Lundi</td>\n                            <td className=\"calendar-dayName\">Mardi</td>\n                            <td className=\"calendar-dayName\">Mercredi</td>\n                            <td className=\"calendar-dayName\">Jeudi</td>\n                            <td className=\"calendar-dayName\">Vendredi</td>\n                            <td className=\"calendar-dayName\">Samedi</td>\n                        </tr>\n                        {this.renderCalendar()}\n                    </tbody>\n                </table>\n                {this.state.isPopup === true\n                    ? <EventPopup key={\"popup\" +this.state.addingEventMode}\n                                event={this.state.popupEvent}\n                                hidePopup={this.hideEventPopup} \n                                addingEventMode={this.state.addingEventMode} \n                                eventsManager={this.props.eventsManager} \n                                month={this.state.month} year={this.state.year}\n                                refreshEvents={this.refreshEvents}> \n                    </EventPopup>\n                    : <React.Fragment></React.Fragment>\n                }\n\n                <GoogleIntegration refreshEvents={this.refreshEvents}></GoogleIntegration>\n                <FileUploader refreshEvents={this.refreshEvents}></FileUploader>\n            </div>\n        );\n    }\n}\n\nexport default Calendar;\n","export default class EventsManager{\n\n    deleteEvent(event){\n        var url = \"http://localhost:8080/calendar-events/deleteEvent/\" + event.id;\n        var promise = this.fetchInBackend(url, 'DELETE');\n        return promise;\n    }\n\n    addEvent(fromYear, fromMonth, fromDay, toYear, toMonth, toDay, fromHour, fromMinute, toHour, toMinute ,title, location, description, recurrence, allDay){\n        let event = this.createBlankEvent(fromYear,fromMonth);\n        \n        event.from.year = fromYear;\n        event.from.month = fromMonth;\n        event.from.day = fromDay;\n        event.to.year = toYear;\n        event.to.month = toMonth;\n        event.to.day = toDay;\n        event.title = title;\n        event.location = location;\n        event.description = description;\n        event.recurrence = recurrence;\n\n        event.from.time.hour = fromHour;\n        event.from.time.minute = fromMinute;\n        event.to.time.hour = toHour;\n        event.to.time.minute = toMinute;\n\n        event.allDay = allDay;\n\n        var url = \"http://localhost:8080/calendar-events/addEvent/\" + JSON.stringify(event);\n        var promise = this.fetchInBackend(url, 'PUT');\n        return promise;\n    }\n\n    updateEvent(id, fromYear, fromMonth, fromDay, toYear, toMonth, toDay, fromHour, fromMinute, toHour, toMinute ,title, location, description, recurrence, allDay){\n        let event = this.createBlankEvent(fromYear,fromMonth)\n\n        // event.id = id\n        event.from.year = fromYear;\n        event.from.month = fromMonth;\n        event.from.day = fromDay;\n        event.to.year = toYear;\n        event.to.month = toMonth;\n        event.to.day = toDay;\n        event.title = title;\n        event.location = location;\n        event.description = description;\n        event.recurrence = recurrence;\n\n        event.from.time.hour = fromHour;\n        event.from.time.minute = fromMinute;\n        event.to.time.hour = toHour;\n        event.to.time.minute = toMinute;\n\n        event.allDay = allDay;\n\n\n        var url = \"http://localhost:8080/calendar-events/updateEvent/\" +id +\"/\" + JSON.stringify(event);\n        var promise = this.fetchInBackend(url, 'PUT');\n        return promise;\n\n    }\n\n    getEvents(year, month){\n        var url = \"http://localhost:8080/calendar-events/getEvents/\" + year + \"/\" +month;\n\n        var promise = this.fetchInBackend(url, 'GET')\n            .then(response => response.json())\n            .then( (user) => {\n                var jsonStr = JSON.stringify(user);\n                var temp = JSON.parse(jsonStr);\n                return temp;\n            });\n  \n          return promise;\n    }\n\n    fetchInBackend(url, fetchMethod){\n        var promise = fetch(url , {\n          method: fetchMethod, // *GET, POST, PUT, DELETE, etc.\n          mode: 'cors', // no-cors, *cors, same-origin\n          cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n          credentials: 'same-origin', // include, *same-origin, omit\n          headers: {\n              'Content-Type': 'application/json'//,\n              //'Authorization': `Bearer ${this.$jwt.getToken()}`\n              // 'Content-Type': 'application/x-www-form-urlencoded',\n          },\n          redirect: 'follow', // manual, *follow, error\n          referrerPolicy: 'no-referrer'\n          })\n        \n          return promise;\n    }\n\n    createBlankEvent(year, month){\n        let event = {\"from\":{\"day\":\"01\",\"month\":month,\"year\":year,\"time\":{\"hour\":0,\"minute\":0}},\n                    \"to\":{\"day\":\"01\",\"month\":month,\"year\":year,\"time\":{\"hour\":0,\"minute\":0}},\n                    \"title\":\"\",\"location\":\"\",\"description\":\"\",\"recurrence\":\"NONE\",\"calendarType\":\"FRIDAY\", \"allDay\":\"false\"};\n        return event;\n    }\n}","import React, {Component} from \"react\";\nimport \"./DaySummary.css\";\n\nclass DaySummary extends Component{\n\n    componentDidMount(){\n        const date = new Date();\n        this.fetchEvents( date.getFullYear(), date.getMonth()+1)\n        \n    }\n\n    fetchEvents(year, month){\n        this.props.fetchEvents(year,month);\n    }\n\n    prependZeroIfNeeded(value){\n        var string = String(value)\n        if(string.length === 1) string = \"0\" +string;\n        return string;\n    }\n\n    renderEventsList = () =>{\n        const date = new Date();\n        let retTab = [];\n        let dayEventTab = [];\n\n\n        for (let index = 0; index < this.props.events.length; index++){\n            let ev = this.props.events[index];\n            if(ev.from.day <= date.getDate() && ev.to.day >= date.getDate() ){\n                dayEventTab.push(ev);\n            }\n        }\n\n        dayEventTab.sort((ev1, ev2) => {\n            if(ev1.from.time.hour  <= ev2.from.time.hour) return -1;\n            else return 1;\n        });\n\n        for (let index = 0; index < dayEventTab.length; index++){\n            let ev = dayEventTab[index];\n            let time = null;\n            if(ev.allDay) time = \"All day\";\n            else time = ev.from.time.hour +\":\" +this.prependZeroIfNeeded(ev.from.time.minute) +\" - \" +ev.to.time.hour +\":\"+this.prependZeroIfNeeded(ev.to.time.minute);\n\n            retTab.push(<li key={index} className=\"day-event\">\n                        <b>{ev.title}</b> <br></br>\n                        {ev.location} <br></br>\n                        {time}\n                    </li>);\n        }\n\n        if(retTab.length === 0) retTab.push(<b key={\"no_event\"} >Pas d'evenements aujourd'hui</b>)\n        \n        return retTab;\n    }\n\n\n    render(){\n        return(\n            <div  align=\"center\">\n                <h3><b>Resumé du jour :</b></h3>\n                <ul>\n                    <React.Fragment>\n                        {this.renderEventsList()}\n                    </React.Fragment>\n                </ul>\n                <br></br>\n            </div>\n        );\n    }\n}\n\nexport default DaySummary;","import React, {Component} from \"react\";\nimport \"./SubwayStatus.css\";\n\nclass SubwayStatus extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            statuses: []\n        }\n    }\n\n    componentDidMount(){\n        this.fetchMetroStatus();\n    }\n\n    fetchMetroStatus(){\n        fetch(\"https://api-ratp.pierre-grimaud.fr/v4/traffic\" , {\n            method: 'GET', // *GET, POST, PUT, DELETE, etc.\n            })\n            .then(response => response.json())\n            .then( (user) => {\n                var jsonString = JSON.stringify(user);\n                var temp = JSON.parse(jsonString);\n                this.renderMetroStatus(temp);\n            })\n            .catch(err => {\n                console.log(err);\n            });\n          \n    }\n\n    renderMetroStatus(statusJson){\n        let renderFinal = [];\n        let metrosTab = [];\n\n        let metros = statusJson.result.metros;\n        metros.forEach(m =>{\n            metrosTab.push(<td key={m.line} className=\"subway-line\">\n                <p><b>{m.line}</b> {m.title}</p>\n            </td>);\n        });\n\n        let rers = statusJson.result.rers;\n        rers.forEach(m =>{\n            metrosTab.push(<td key={m.line} className=\"subway-line\">\n                <p><b>{m.line}</b> {m.title}</p>\n            </td>);\n        });\n\n        let tramways = statusJson.result.tramways;\n        tramways.forEach(m =>{\n            metrosTab.push(<td key={m.line} className=\"subway-line\">\n                <p><b>{m.line}</b> {m.title}</p>\n            </td>);\n        });\n\n        let pushTab = []\n        for(let i = 0; i < metrosTab.length; i++){\n            pushTab.push(metrosTab[i]);\n\n            if(pushTab.length === 9){\n                renderFinal.push(<tr key={i}>{pushTab}</tr>)\n                pushTab = [];\n            }\n        }\n        renderFinal.push(<tr key={\"last\"}>{pushTab}</tr>)\n        \n\n\n       this.setState({statuses: renderFinal});\n    }\n\n\n    render(){\n        return(\n            <div align=\"center\">\n                <b>Status des metros, rers, tramways parisiens:</b>\n                <br></br>\n                <br></br>\n                <table>\n                    <tbody>\n                        {this.state.statuses}\n                    </tbody>\n                </table>\n                <br></br>\n                <br></br>\n            </div>\n        );\n    }\n}\n\nexport default SubwayStatus;","import React, {Component} from \"react\";\nimport EventsManager from \"../EventsManager.js\"\nimport Calendar from '../Calendar/Calendar.jsx';\nimport DaySummary from '../DaySummary/DaySummary.jsx';\nimport SubwayStatus from '../SubwayStatus/SubwayStatus.jsx';\n\n\nclass Application extends Component{\n\n    eventsManager = new EventsManager();\n\n    constructor(props){\n        super(props);\n        this.state = {\n            calendarEvents: [],\n            daySummaryEvents: []\n        }\n\n        this.fetchCalendarEvents = this.fetchCalendarEvents.bind(this);\n        this.fetchDaySummaryEvents = this.fetchDaySummaryEvents.bind(this);\n        this.refreshEventsAllApp = this.refreshEventsAllApp.bind(this);\n    }\n\n\n    fetchCalendarEvents(year, month){\n        // console.log(\"Date: \" +year +\" \" +month)\n        var promise = this.eventsManager.getEvents(year,month);\n        promise.then( result => {\n            //console.log(result)\n            this.setState({calendarEvents: result});\n        }).catch(err => {\n            console.log(err);\n        });\n    }\n\n    fetchDaySummaryEvents(year, month){\n        // console.log(\"Date: \" +year +\" \" +month)\n        var promise = this.eventsManager.getEvents(year,month);\n        promise.then( result => {\n            //console.log(result)\n            this.setState({daySummaryEvents: result});\n        }).catch(err => {\n            console.log(err);\n        });\n    }\n\n    refreshEventsAllApp(year, month){\n        const date = new Date();\n        this.fetchCalendarEvents(year, month);\n        this.fetchDaySummaryEvents(date.getFullYear(), date.getMonth()+1);\n    }\n\n\n\n    render() {\n        return(\n        <React.Fragment>\n            <SubwayStatus></SubwayStatus>\n            \n            <DaySummary fetchEvents={this.fetchDaySummaryEvents} \n                        events={this.state.daySummaryEvents}>\n            </DaySummary>\n\n            <Calendar fetchEvents={this.fetchCalendarEvents} \n                    events={this.state.calendarEvents} \n                    refreshEventsAllApp={this.refreshEventsAllApp} \n                    eventsManager={this.eventsManager}>\n            </Calendar>\n\n            \n\n        </React.Fragment>\n        );\n    }\n}\n\nexport default Application;","//import logo from './logo.svg';\nimport './App.css';\nimport './components/Calendar/Calendar.jsx';\nimport Application from './components/Application/Application.jsx';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header> */}\n      {/* <DaySummary></DaySummary>\n      <Calendar></Calendar> */}\n      <Application></Application>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}